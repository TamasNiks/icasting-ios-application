//
//  ICImage.swift
//  iCasting
//
//  Created by Tim van Steenoven on 29/04/15.
//  Copyright (c) 2015 T. van Steenoven. All rights reserved.
//

import UIKit


private let clientAvatarThumbBase64: String = "/9j/4QAYRXhpZgAASUkqAAgAAAAAAAAAAAAAAP/sABFEdWNreQABAAQAAABQAAD/4QN0aHR0cDovL25zLmFkb2JlLmNvbS94YXAvMS4wLwA8P3hwYWNrZXQgYmVnaW49Iu+7vyIgaWQ9Ilc1TTBNcENlaGlIenJlU3pOVGN6a2M5ZCI/PiA8eDp4bXBtZXRhIHhtbG5zOng9ImFkb2JlOm5zOm1ldGEvIiB4OnhtcHRrPSJBZG9iZSBYTVAgQ29yZSA1LjUtYzAyMSA3OS4xNTQ5MTEsIDIwMTMvMTAvMjktMTE6NDc6MTYgICAgICAgICI+IDxyZGY6UkRGIHhtbG5zOnJkZj0iaHR0cDovL3d3dy53My5vcmcvMTk5OS8wMi8yMi1yZGYtc3ludGF4LW5zIyI+IDxyZGY6RGVzY3JpcHRpb24gcmRmOmFib3V0PSIiIHhtbG5zOnhtcE1NPSJodHRwOi8vbnMuYWRvYmUuY29tL3hhcC8xLjAvbW0vIiB4bWxuczpzdFJlZj0iaHR0cDovL25zLmFkb2JlLmNvbS94YXAvMS4wL3NUeXBlL1Jlc291cmNlUmVmIyIgeG1sbnM6eG1wPSJodHRwOi8vbnMuYWRvYmUuY29tL3hhcC8xLjAvIiB4bXBNTTpPcmlnaW5hbERvY3VtZW50SUQ9InhtcC5kaWQ6QjBEM0FCQkZGOTU1MTFFMzkyMDdBNTAzN0E0RDE2RjQiIHhtcE1NOkRvY3VtZW50SUQ9InhtcC5kaWQ6NDVFOURFOTczQTcyMTFFNEJDQzlCMDEwNTczODY5QjciIHhtcE1NOkluc3RhbmNlSUQ9InhtcC5paWQ6NDVFOURFOTYzQTcyMTFFNEJDQzlCMDEwNTczODY5QjciIHhtcDpDcmVhdG9yVG9vbD0iQWRvYmUgUGhvdG9zaG9wIENDIChNYWNpbnRvc2gpIj4gPHhtcE1NOkRlcml2ZWRGcm9tIHN0UmVmOmluc3RhbmNlSUQ9InhtcC5paWQ6MzI5NDIyZTYtNWVjMy00MTcyLWI0OGItMjU4MWMxMTIxZjJkIiBzdFJlZjpkb2N1bWVudElEPSJ4bXAuZGlkOkIwRDNBQkJGRjk1NTExRTM5MjA3QTUwMzdBNEQxNkY0Ii8+IDwvcmRmOkRlc2NyaXB0aW9uPiA8L3JkZjpSREY+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"


enum ICImages {
    
    case PlaceHolderClientAvatar, ImageWithString(String)
    
    var image: UIImage? {

        switch self {
        case .PlaceHolderClientAvatar:
            return UIImage(data: getData(clientAvatarThumbBase64))
        case .ImageWithString(let base64):
            return UIImage(data: getData(base64))
        }
    }
    
    private func getData(base64: String)-> NSData {
        
        var decodedData: NSData? = NSData(base64EncodedString: base64, options: NSDataBase64DecodingOptions.allZeros)
        if let range = base64.rangeOfString(",") {
            var index = range.startIndex.successor()
            var newBase64: String = base64.substringFromIndex(index)
            decodedData = NSData(base64EncodedString: newBase64, options: NSDataBase64DecodingOptions.allZeros)
        }
        
        return decodedData ?? NSData()
    }

}